#!/usr/bin/env python


def get_args():
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '--patches',
        help='pizza cutter patches file',
        required=True,
    )
    parser.add_argument(
        '--output',
        help='output file name',
        required=True,
    )

    parser.add_argument(
        '--nrand',
        type=int,
        default=10_000,
        help='size of random subset to plot',
    )
    parser.add_argument(
        '--seed',
        type=int,
        default=99,
        help='seed for rng',
    )

    return parser.parse_args()


def read_catalog(fname):
    import fitsio
    print('reading:', fname)
    return fitsio.read(fname)


def doplot(args, data):
    import matplotlib.pyplot as mplt
    import matplotlib.cm as cm
    import numpy as np
    import skyproj

    rng = np.random.RandomState(seed=args.seed)
    rind = rng.randint(0, data.size, size=args.nrand)

    npatch = np.unique(data['patch_num']).size
    colors = cm.rainbow(np.linspace(0, 1, npatch))
    fig, ax = mplt.subplots()

    # sp = skyproj.McBrydeSkyproj(ax=ax)
    sp = skyproj.DESSkyproj(ax=ax)
    # ax.scatter(
    sp.scatter(
        data['ra'][rind],
        data['dec'][rind],
        color=colors[data['patch_num'][rind]],
        s=0.1,
    )
    print('writing:', args.output)
    mplt.savefig(args.output, dpi=150)


def main():
    args = get_args()

    data = read_catalog(args.patches)
    doplot(args, data)


if __name__ == '__main__':
    main()
